{"ast":null,"code":"export async function CityCoordinates(cityName) {\n  try {\n    console.log(\"SENDING NAME \" + cityName);\n    const response = await fetch(`https://api.api-ninjas.com/v1/geocoding?city=${cityName}`, {\n      method: \"GET\",\n      headers: {\n        \"X-Api-Key\": \"IVtRMQz/tmCd/xHXa39gfA==iuJcBIIBxM0PaXbW\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      console.log(await response.json());\n      throw new Error(\"Request failed with status \" + response.status + response);\n    }\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (error) {\n    console.error(\"Error: \", error);\n    throw error;\n  }\n}\n_c = CityCoordinates;\nvar _c;\n$RefreshReg$(_c, \"CityCoordinates\");","map":{"version":3,"names":["CityCoordinates","cityName","console","log","response","fetch","method","headers","ok","json","Error","status","result","error","_c","$RefreshReg$"],"sources":["/Users/martazareckaja/Weather-App/src/api/CoordinatesApi.tsx"],"sourcesContent":["export interface CoordinatesData {\n  latitude: number;\n  longitude: number;\n}\n\nexport async function CityCoordinates(cityName: string) {\n  try {\n    console.log(\"SENDING NAME \" + cityName);\n    const response = await fetch(\n      `https://api.api-ninjas.com/v1/geocoding?city=${cityName}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"X-Api-Key\": \"IVtRMQz/tmCd/xHXa39gfA==iuJcBIIBxM0PaXbW\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    if (!response.ok) {\n      console.log(await response.json());\n      throw new Error(\n        \"Request failed with status \" + response.status + response\n      );\n    }\n\n    const result = (await response.json()) as CoordinatesData[];\n    console.log(result);\n    return result;\n  } catch (error) {\n    console.error(\"Error: \", error);\n    throw error;\n  }\n}\n"],"mappings":"AAKA,OAAO,eAAeA,eAAeA,CAACC,QAAgB,EAAE;EACtD,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGF,QAAQ,CAAC;IACvC,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CACzB,gDAA+CJ,QAAS,EAAC,EAC1D;MACEK,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,WAAW,EAAE,0CAA0C;QACvD,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IAED,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;MAChBN,OAAO,CAACC,GAAG,CAAC,MAAMC,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC;MAClC,MAAM,IAAIC,KAAK,CACb,6BAA6B,GAAGN,QAAQ,CAACO,MAAM,GAAGP,QACpD,CAAC;IACH;IAEA,MAAMQ,MAAM,GAAI,MAAMR,QAAQ,CAACK,IAAI,CAAC,CAAuB;IAC3DP,OAAO,CAACC,GAAG,CAACS,MAAM,CAAC;IACnB,OAAOA,MAAM;EACf,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdX,OAAO,CAACW,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;IAC/B,MAAMA,KAAK;EACb;AACF;AAACC,EAAA,GA5BqBd,eAAe;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}