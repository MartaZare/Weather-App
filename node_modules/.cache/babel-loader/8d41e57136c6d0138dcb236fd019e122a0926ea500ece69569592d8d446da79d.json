{"ast":null,"code":"var _jsxFileName = \"/Users/martazareckaja/Vilnius_Weather/weather-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { WeatherCard } from \"./components/WeatherCard\";\nimport { Footer } from \"./components/Footer\";\nimport { TodayWeatherCard } from \"./components/TodayWeatherCard\";\nimport { GetWeahterData } from \"./api/WeatherApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _weatherData$hourly$t3, _weatherData$hourly$t4, _weatherData$hourly$t5, _weatherData$hourly$t6, _weatherData$hourly$t7, _weatherData$hourly$t8, _weatherData$hourly$t9;\n  //useEffect(() => {//isviekcia api call ir nusettina state}, []);\n  // Isivykdo kai komponentas yra uzkraunamas arba kai state yra pakeiciamas\n  //\n\n  const [weatherData, setWeatherData] = useState();\n  const [weatherArrayTimeIndex, setWeatherArrayTimeIndex] = useState(0);\n  const [weatherArrayDateIndex, setWeatherArrayDateIndex] = useState(0);\n  const [weatherDate, setWeatherDate] = useState(\"\");\n  const [finalDate, setFinalDate] = useState(\"\");\n  const [weeklyWeatherArray, setWeeklyWeatherArray] = useState(\"\");\n  useEffect(() => {\n    var _weatherData$hourly$t, _weatherData$hourly$t2;\n    const fetchData = async () => {\n      let response = await GetWeahterData();\n      setWeatherData(response);\n    };\n    let dateToday;\n    let today = new Date();\n    let timeNow = today.getHours();\n    setWeatherArrayTimeIndex(timeNow - 1);\n    dateToday = today.getFullYear() + \"-0\" + (today.getMonth() + 1) + \"-\" + today.getDate() + \"T12:00\";\n    setWeatherArrayDateIndex((_weatherData$hourly$t = weatherData === null || weatherData === void 0 ? void 0 : weatherData.hourly.time.indexOf(dateToday)) !== null && _weatherData$hourly$t !== void 0 ? _weatherData$hourly$t : 0);\n    setWeatherDate((_weatherData$hourly$t2 = weatherData === null || weatherData === void 0 ? void 0 : weatherData.hourly.time[weatherArrayDateIndex]) !== null && _weatherData$hourly$t2 !== void 0 ? _weatherData$hourly$t2 : \"\");\n    let preFormatedDate = weatherDate.split(\"T\")[0];\n    setFinalDate(preFormatedDate.split(\"2023-\")[1]);\n    console.log(finalDate);\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodayWeatherCard, {\n      temperature: (_weatherData$hourly$t3 = weatherData === null || weatherData === void 0 ? void 0 : weatherData.hourly.temperature_2m[weatherArrayTimeIndex]) !== null && _weatherData$hourly$t3 !== void 0 ? _weatherData$hourly$t3 : 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n      temperature: (_weatherData$hourly$t4 = weatherData === null || weatherData === void 0 ? void 0 : weatherData.hourly.temperature_2m[weatherArrayDateIndex + 24]) !== null && _weatherData$hourly$t4 !== void 0 ? _weatherData$hourly$t4 : 0,\n      date: finalDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n      temperature: (_weatherData$hourly$t5 = weatherData === null || weatherData === void 0 ? void 0 : weatherData.hourly.temperature_2m[weatherArrayDateIndex + 48]) !== null && _weatherData$hourly$t5 !== void 0 ? _weatherData$hourly$t5 : 0,\n      date: finalDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n      temperature: (_weatherData$hourly$t6 = weatherData === null || weatherData === void 0 ? void 0 : weatherData.hourly.temperature_2m[weatherArrayDateIndex + 96]) !== null && _weatherData$hourly$t6 !== void 0 ? _weatherData$hourly$t6 : 0,\n      date: finalDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n      temperature: (_weatherData$hourly$t7 = weatherData === null || weatherData === void 0 ? void 0 : weatherData.hourly.temperature_2m[weatherArrayDateIndex + 120]) !== null && _weatherData$hourly$t7 !== void 0 ? _weatherData$hourly$t7 : 0,\n      date: finalDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n      temperature: (_weatherData$hourly$t8 = weatherData === null || weatherData === void 0 ? void 0 : weatherData.hourly.temperature_2m[weatherArrayDateIndex + 144]) !== null && _weatherData$hourly$t8 !== void 0 ? _weatherData$hourly$t8 : 0,\n      date: finalDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n      temperature: (_weatherData$hourly$t9 = weatherData === null || weatherData === void 0 ? void 0 : weatherData.hourly.temperature_2m[weatherArrayDateIndex + 168]) !== null && _weatherData$hourly$t9 !== void 0 ? _weatherData$hourly$t9 : 0,\n      date: finalDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yJy7lHi6FquPOFnEA9FBt6b8ReE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","WeatherCard","Footer","TodayWeatherCard","GetWeahterData","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_weatherData$hourly$t3","_weatherData$hourly$t4","_weatherData$hourly$t5","_weatherData$hourly$t6","_weatherData$hourly$t7","_weatherData$hourly$t8","_weatherData$hourly$t9","weatherData","setWeatherData","weatherArrayTimeIndex","setWeatherArrayTimeIndex","weatherArrayDateIndex","setWeatherArrayDateIndex","weatherDate","setWeatherDate","finalDate","setFinalDate","weeklyWeatherArray","setWeeklyWeatherArray","_weatherData$hourly$t","_weatherData$hourly$t2","fetchData","response","dateToday","today","Date","timeNow","getHours","getFullYear","getMonth","getDate","hourly","time","indexOf","preFormatedDate","split","console","log","children","temperature","temperature_2m","fileName","_jsxFileName","lineNumber","columnNumber","date","_c","$RefreshReg$"],"sources":["/Users/martazareckaja/Vilnius_Weather/weather-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { WeatherCard } from \"./components/WeatherCard\";\nimport { Footer } from \"./components/Footer\";\nimport { TodayWeatherCard } from \"./components/TodayWeatherCard\";\nimport { GetWeahterData, WeatherData } from \"./api/WeatherApi\";\n\nfunction App() {\n  //useEffect(() => {//isviekcia api call ir nusettina state}, []);\n  // Isivykdo kai komponentas yra uzkraunamas arba kai state yra pakeiciamas\n  //\n\n  const [weatherData, setWeatherData] = useState<WeatherData | null>();\n  const [weatherArrayTimeIndex, setWeatherArrayTimeIndex] = useState<number>(0);\n  const [weatherArrayDateIndex, setWeatherArrayDateIndex] = useState<number>(0);\n  const [weatherDate, setWeatherDate] = useState<string>(\"\");\n  const [finalDate, setFinalDate] = useState<string>(\"\");\n  const [weeklyWeatherArray, setWeeklyWeatherArray] = useState<string[]>(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let response = await GetWeahterData();\n      setWeatherData(response);\n    };\n    let dateToday: string;\n    let today = new Date();\n    let timeNow = today.getHours();\n    setWeatherArrayTimeIndex(timeNow - 1);\n\n    dateToday =\n      today.getFullYear() +\n      \"-0\" +\n      (today.getMonth() + 1) +\n      \"-\" +\n      today.getDate() +\n      \"T12:00\";\n\n    setWeatherArrayDateIndex(weatherData?.hourly.time.indexOf(dateToday) ?? 0);\n\n    setWeatherDate(weatherData?.hourly.time[weatherArrayDateIndex] ?? \"\");\n\n    let preFormatedDate = weatherDate.split(\"T\")[0];\n    setFinalDate(preFormatedDate.split(\"2023-\")[1]);\n\n    console.log(finalDate);\n\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <TodayWeatherCard\n        temperature={\n          weatherData?.hourly.temperature_2m[weatherArrayTimeIndex] ?? 0\n        }\n      />\n      <WeatherCard\n        temperature={\n          weatherData?.hourly.temperature_2m[weatherArrayDateIndex + 24] ?? 0\n        }\n        date={finalDate}\n      />\n      <WeatherCard\n        temperature={\n          weatherData?.hourly.temperature_2m[weatherArrayDateIndex + 48] ?? 0\n        }\n        date={finalDate}\n      />\n      <WeatherCard\n        temperature={\n          weatherData?.hourly.temperature_2m[weatherArrayDateIndex + 96] ?? 0\n        }\n        date={finalDate}\n      />\n      <WeatherCard\n        temperature={\n          weatherData?.hourly.temperature_2m[weatherArrayDateIndex + 120] ?? 0\n        }\n        date={finalDate}\n      />\n      <WeatherCard\n        temperature={\n          weatherData?.hourly.temperature_2m[weatherArrayDateIndex + 144] ?? 0\n        }\n        date={finalDate}\n      />\n      <WeatherCard\n        temperature={\n          weatherData?.hourly.temperature_2m[weatherArrayDateIndex + 168] ?? 0\n        }\n        date={finalDate}\n      />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}