{"ast":null,"code":"var _jsxFileName = \"/Users/martazareckaja/Vilnius_Weather/weather-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Footer } from \"./components/Footer\";\nimport { TodayWeatherCard } from \"./components/TodayWeatherCard\";\nimport { GetWeahterData } from \"./api/WeatherApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _weatherData$hourly$t;\n  //useEffect(() => {//isviekcia api call ir nusettina state}, []);\n  // Isivykdo kai komponentas yra uzkraunamas arba kai state yra pakeiciamas\n  //\n\n  const [weatherData, setWeatherData] = useState();\n  const [weatherArrayTimeIndex, setweatherArrayTimeIndex] = useState(0);\n  // const [weatherArrayDayIndex, setweatherArrayDayIndex] =\n  //   useState<string>(\"0000-00-00\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let response = await GetWeahterData();\n      setWeatherData(response);\n    };\n    let today = new Date();\n    let timeNow = today.getHours();\n    setweatherArrayTimeIndex(timeNow - 1);\n    let dayNow = today.getDate();\n    console.log(`Day now is ${dayNow}`);\n    // setweatherArrayDayIndex(dayNow - 1);\n\n    fetchData();\n  }, []);\n  console.log(weatherData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodayWeatherCard, {\n      temperature: (_weatherData$hourly$t = weatherData === null || weatherData === void 0 ? void 0 : weatherData.hourly.temperature_2m[weatherArrayTimeIndex]) !== null && _weatherData$hourly$t !== void 0 ? _weatherData$hourly$t : 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"DAlbaxM396BMWt0h+iJe6CXobK8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Footer","TodayWeatherCard","GetWeahterData","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_weatherData$hourly$t","weatherData","setWeatherData","weatherArrayTimeIndex","setweatherArrayTimeIndex","fetchData","response","today","Date","timeNow","getHours","dayNow","getDate","console","log","children","temperature","hourly","temperature_2m","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/martazareckaja/Vilnius_Weather/weather-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { WeatherCard } from \"./components/WeatherCard\";\nimport { Footer } from \"./components/Footer\";\nimport { TodayWeatherCard } from \"./components/TodayWeatherCard\";\nimport { GetWeahterData, WeatherData } from \"./api/WeatherApi\";\nimport { log } from \"console\";\n\nfunction App() {\n  //useEffect(() => {//isviekcia api call ir nusettina state}, []);\n  // Isivykdo kai komponentas yra uzkraunamas arba kai state yra pakeiciamas\n  //\n\n  const [weatherData, setWeatherData] = useState<WeatherData | null>();\n  const [weatherArrayTimeIndex, setweatherArrayTimeIndex] = useState<number>(0);\n  // const [weatherArrayDayIndex, setweatherArrayDayIndex] =\n  //   useState<string>(\"0000-00-00\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let response = await GetWeahterData();\n      setWeatherData(response);\n    };\n\n    let today = new Date();\n    let timeNow = today.getHours();\n    setweatherArrayTimeIndex(timeNow - 1);\n\n    let dayNow = today.getDate();\n    console.log(`Day now is ${dayNow}`);\n    // setweatherArrayDayIndex(dayNow - 1);\n\n    fetchData();\n  }, []);\n  console.log(weatherData);\n\n  return (\n    <>\n      <TodayWeatherCard\n        temperature={\n          weatherData?.hourly.temperature_2m[weatherArrayTimeIndex] ?? 0\n        }\n      />\n      {/* <WeatherCard temperature={36.6} date={weatherArrayDayIndex + 1} />\n      <WeatherCard temperature={30.2} date={weatherArrayDayIndex + 2} />\n      <WeatherCard temperature={31.1} date={weatherArrayDayIndex + 3} />\n      <WeatherCard temperature={39.7} date={weatherArrayDayIndex + 4} />\n      <WeatherCard temperature={40.5} date={weatherArrayDayIndex + 5} />\n      <WeatherCard temperature={38.0} date={weatherArrayDayIndex + 6} /> */}\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,gBAAgB,QAAQ,+BAA+B;AAChE,SAASC,cAAc,QAAqB,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG/D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EACb;EACA;EACA;;EAEA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAqB,CAAC;EACpE,MAAM,CAACa,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGd,QAAQ,CAAS,CAAC,CAAC;EAC7E;EACA;;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAIC,QAAQ,GAAG,MAAMb,cAAc,CAAC,CAAC;MACrCS,cAAc,CAACI,QAAQ,CAAC;IAC1B,CAAC;IAED,IAAIC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,IAAIC,OAAO,GAAGF,KAAK,CAACG,QAAQ,CAAC,CAAC;IAC9BN,wBAAwB,CAACK,OAAO,GAAG,CAAC,CAAC;IAErC,IAAIE,MAAM,GAAGJ,KAAK,CAACK,OAAO,CAAC,CAAC;IAC5BC,OAAO,CAACC,GAAG,CAAE,cAAaH,MAAO,EAAC,CAAC;IACnC;;IAEAN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACNQ,OAAO,CAACC,GAAG,CAACb,WAAW,CAAC;EAExB,oBACEN,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA,CAACH,gBAAgB;MACfwB,WAAW,GAAAhB,qBAAA,GACTC,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEgB,MAAM,CAACC,cAAc,CAACf,qBAAqB,CAAC,cAAAH,qBAAA,cAAAA,qBAAA,GAAI;IAC9D;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAOF3B,OAAA,CAACJ,MAAM;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACV,CAAC;AAEP;AAACvB,EAAA,CA5CQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}